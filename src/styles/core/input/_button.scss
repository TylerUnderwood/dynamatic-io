@use '../../functions/media';

/*
|–––––––––––––––––––––––––
| Button
|–––––––––––––––––––––––––
*/

body {
    --button-color: var(--input-color);
    --button-hover: var(--input-hover);
    --button-active: var(--input-active);
    --button-face: var(--theme-base);
    --button-height: var(--input-height);
    --button-timing: var(--input-timing);
    --button-easing: var(--input-easing);
}

button {
  display: inline-block;
  outline: none;
  border: none;
  background-color: transparent;
  padding: 0;
  text-align: inherit;
  font-size: inherit;
  color: inherit;
  cursor: pointer;
}

.button {
  $self: &;
  display: inline-flex;
  justify-content: center;
  align-items: center;
  flex: 0 0 auto;
  overflow: clip;
  outline: none;
  border-width: 2px;
  border-style: solid;
  border-color: transparent;
  border-radius: var(--input-round);
  min-width: 8em;
  height: var(--button-height);
  background-color: var(--button-color);
  padding: 0 1.4em;
  vertical-align: middle;
  white-space: nowrap;
  text-align: center;
  text-decoration: none;
  font-size: inherit;
  color: var(--button-face);
  transition-property: border-color, background-color, color, opacity;
  transition-duration: var(--button-timing);
  transition-timing-function: var(--button-easing);
  user-select: none;
  cursor: pointer;

  // [stealth] first so :hover overrides it
  &[stealth] {
    border-color: transparent;
    background-color: transparent;
    color: inherit;
  }

  // [active] should override [stealth]
  &[active] {
    border-color: transparent;
    background-color: var(--button-active);
    color: var(--button-face);
  }

  // :hover should override [active]
  &[hover],
  &:hover {
    outline: none;
    border-color: transparent;
    background-color: var(--button-hover);
    color: var(--button-face);
  }

  // :focus should override :hover
  &[focus-v],
  &:focus-visible {
    outline: 2px solid var(--input-color);
    outline-offset: 2px;
  }

  // [disabled] should override all
  &[disabled] {
    border-color: transparent !important;
    background-color: var(--button-color) !important;
    color: var(--button-face) !important;
    opacity: 0.5;
    cursor: not-allowed;
  }

  // === button components === //
  &__text {
    display: block;
    font-weight: 500;
    font-size: 0.8em;
  }

  &__icon {
    font-size: 1em;
  }


  // === button types === //

  // = primary button = //
  &--primary,
  &[data-type="primary"] {
    visibility: visible;
  }

  // = secondary button = //
  &--secondary,
  &[data-type="secondary"] {
    border-color: var(--button-color);
    background-color: transparent;
    color: var(--button-color);

    &[stealth] {
      border-color: transparent;
      background-color: transparent;
      color: inherit;
    }

    &[active] {
      border-color: var(--button-active);
      background-color: transparent;
      color: var(--button-active);
    }

    &[hover],
    &:hover {
      border-color: var(--button-hover);
      background-color: transparent;
      color: var(--button-hover);
    }

    &[disabled] {
      border-color: var(--button-color) !important;
      background-color: transparent !important;
      color: var(--button-color) !important;
    }

    #{$self}__text {
      font-size: 0.7em;
    }
  }

  // = tertiary button = //
  &--tertiary,
  &[data-type="tertiary"] {
    border-color: transparent;
    background-color: transparent;
    color: var(--button-color);

    &[stealth] {
      border-color: transparent;
      background-color: transparent;
      color: inherit;
    }

    &[active] {
      border-color: transparent;
      background-color: transparent;
      color: var(--button-active);
    }

    &[hover],
    &:hover {
      border-color: transparent;
      background-color: transparent;
      color: var(--button-hover);
    }

    &[disabled] {
      border-color: transparent !important;
      background-color: transparent !important;
      color: var(--button-color) !important;
    }
  }


  // === button size === //

  // = large button = //
  &--large,
  &[data-size="large"] {
    min-width: 12em;
    height: var(--button-height);
    border-width: 3px;
    padding: 0 2.4em;
    font-weight: 700;
    --button-height: var(--input-height-large);

    #{$self}__text {
      font-weight: 700;
      font-size: 0.9em;
    }

    #{$self}__icon {
      font-size: 1.2em;
    }

    &#{$self}--secondary #{$self}__text,
    &[data-type="secondary"] #{$self}__text {
      font-size: 0.8em;
    }
  }

  // = small button = //
  &--small,
  &[data-size="small"] {
    min-width: 6em;
    height: var(--button-height);
    border-width: 1px;
    padding: 0 1.2em;
    font-weight: 300;
    --button-height: var(--input-height-small);

    #{$self}__text {
      font-weight: 300;
      font-size: 0.7em;
    }

    #{$self}__icon {
      font-size: 0.8em;
    }

    &#{$self}--secondary #{$self}__text,
    &[data-type="secondary"] #{$self}__text {
      font-size: 0.6em;
    }
  }

  // = tiny button = //
  &--tiny,
  &[data-size="tiny"] {
    min-width: unset;
    border-width: 1px;
    padding: 0.2em 0.3em;
    font-weight: 300;
    --button-height: 1.2em;

    #{$self}__text {
      font-weight: 300;
      font-size: 0.6em;
    }

    #{$self}__icon {
      font-size: 0.8em;
    }
  }


  // === button shape === //

  // = stout button = //
  &--stout,
  &[data-shape="stout"] {
    min-width: unset;
    padding: 0 0.8em;
  }

  // = simple button = //
  &--simple,
  &[data-shape="simple"] {
    min-width: unset;
    height: fit-content;
    padding: 0.5em;
  }

  // = square button = //
  &--square,
  &[data-shape="square"] {
    min-width: unset;
    width: var(--button-height);
    height: var(--button-height);;
    padding: 0;
  }

  // = full button = //
  &--full,
  &[data-shape="full"] {
    flex: 1 0 auto;
    width: 100%;
    max-width: unset;
  }

  @include media.below( sm ) {
    .\-sm\:#{$self}--full,
    &[data-shape="-sm:full"] {
      flex: 1 0 auto;
      width: 100%;
      max-width: unset;
    }
  }

  @include media.below( md ) {
    .\-md\:#{$self}--full,
    &[data-shape="-md:full"] {
      flex: 1 0 auto;
      width: 100%;
      max-width: unset;
    }
  }


  // === button scheme === //

  // = success button = //
  &--success,
  &[data-scheme="success"] {
    --button-color:       #00aa22;
    --button-hover:       #00aa22;
    --button-active:      #00aa22;
  }

  // = warn button = //
  &--warn,
  &[data-scheme="warn"] {
    --button-color:       hsl(52, 100%, 50%);
    --button-hover:       hsl(52, 100%, 70%);
    --button-active:      hsl(48, 100%, 48%);
    --button-face:        var(--light-face);
  }

  // = error button = //
  &--error,
  &[data-scheme="error"] {
    --button-color:       hsl(8, 100%, 50%);
    --button-hover:       hsl(8, 100%, 70%);
    --button-active:      hsl(4, 100%, 40%);
  }
}
